:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/doc/classes/RetargetModifier3D.xml.

.. _class_RetargetModifier3D:

RetargetModifier3D
==================

**Inherits:** :ref:`SkeletonModifier3D<class_SkeletonModifier3D>` **<** :ref:`Node3D<class_Node3D>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

A modifier to transfer parent skeleton poses (or global poses) to child skeletons in model space with different rests.

.. rst-class:: classref-introduction-group

Description
-----------

Retrieves the pose (or global pose) relative to the parent Skeleton's rest in model space and transfers it to the child Skeleton.

This modifier rewrites the pose of the child skeleton directly in the parent skeleton's update process. This means that it overwrites the mapped bone pose set in the normal process on the target skeleton. If you want to set the target skeleton bone pose after retargeting, you will need to add a :ref:`SkeletonModifier3D<class_SkeletonModifier3D>` child to the target skeleton and thereby modify the pose.

\ **Note:** When the :ref:`use_global_pose<class_RetargetModifier3D_property_use_global_pose>` is enabled, even if it is an unmapped bone, it can cause visual problems because the global pose is applied ignoring the parent bone's pose **if it has mapped bone children**. See also :ref:`use_global_pose<class_RetargetModifier3D_property_use_global_pose>`.

.. rst-class:: classref-reftable-group

Properties
----------

.. table::
   :widths: auto

   +-----------------------------------------------+-----------------------------------------------------------------------------+-----------+
   | :ref:`bool<class_bool>`                       | :ref:`position_enabled<class_RetargetModifier3D_property_position_enabled>` | ``true``  |
   +-----------------------------------------------+-----------------------------------------------------------------------------+-----------+
   | :ref:`SkeletonProfile<class_SkeletonProfile>` | :ref:`profile<class_RetargetModifier3D_property_profile>`                   |           |
   +-----------------------------------------------+-----------------------------------------------------------------------------+-----------+
   | :ref:`bool<class_bool>`                       | :ref:`rotation_enabled<class_RetargetModifier3D_property_rotation_enabled>` | ``true``  |
   +-----------------------------------------------+-----------------------------------------------------------------------------+-----------+
   | :ref:`bool<class_bool>`                       | :ref:`scale_enabled<class_RetargetModifier3D_property_scale_enabled>`       | ``true``  |
   +-----------------------------------------------+-----------------------------------------------------------------------------+-----------+
   | :ref:`bool<class_bool>`                       | :ref:`use_global_pose<class_RetargetModifier3D_property_use_global_pose>`   | ``false`` |
   +-----------------------------------------------+-----------------------------------------------------------------------------+-----------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Property Descriptions
---------------------

.. _class_RetargetModifier3D_property_position_enabled:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **position_enabled** = ``true`` :ref:`ðŸ”—<class_RetargetModifier3D_property_position_enabled>`

.. rst-class:: classref-property-setget

- |void| **set_position_enabled**\ (\ value\: :ref:`bool<class_bool>`\ )
- :ref:`bool<class_bool>` **is_position_enabled**\ (\ )

If ``true``, allows to retarget the position.

.. rst-class:: classref-item-separator

----

.. _class_RetargetModifier3D_property_profile:

.. rst-class:: classref-property

:ref:`SkeletonProfile<class_SkeletonProfile>` **profile** :ref:`ðŸ”—<class_RetargetModifier3D_property_profile>`

.. rst-class:: classref-property-setget

- |void| **set_profile**\ (\ value\: :ref:`SkeletonProfile<class_SkeletonProfile>`\ )
- :ref:`SkeletonProfile<class_SkeletonProfile>` **get_profile**\ (\ )

:ref:`SkeletonProfile<class_SkeletonProfile>` for retargeting bones with names matching the bone list.

.. rst-class:: classref-item-separator

----

.. _class_RetargetModifier3D_property_rotation_enabled:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **rotation_enabled** = ``true`` :ref:`ðŸ”—<class_RetargetModifier3D_property_rotation_enabled>`

.. rst-class:: classref-property-setget

- |void| **set_rotation_enabled**\ (\ value\: :ref:`bool<class_bool>`\ )
- :ref:`bool<class_bool>` **is_rotation_enabled**\ (\ )

If ``true``, allows to retarget the rotation.

.. rst-class:: classref-item-separator

----

.. _class_RetargetModifier3D_property_scale_enabled:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **scale_enabled** = ``true`` :ref:`ðŸ”—<class_RetargetModifier3D_property_scale_enabled>`

.. rst-class:: classref-property-setget

- |void| **set_scale_enabled**\ (\ value\: :ref:`bool<class_bool>`\ )
- :ref:`bool<class_bool>` **is_scale_enabled**\ (\ )

If ``true``, allows to retarget the scale.

.. rst-class:: classref-item-separator

----

.. _class_RetargetModifier3D_property_use_global_pose:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **use_global_pose** = ``false`` :ref:`ðŸ”—<class_RetargetModifier3D_property_use_global_pose>`

.. rst-class:: classref-property-setget

- |void| **set_use_global_pose**\ (\ value\: :ref:`bool<class_bool>`\ )
- :ref:`bool<class_bool>` **is_using_global_pose**\ (\ )

If ``false``, in case the target skeleton has fewer bones than the source skeleton, the source bone parent's transform will be ignored.

Instead, it is possible to retarget between models with different body shapes, and position, rotation, and scale can be retargeted separately.

If ``true``, retargeting is performed taking into account global pose.

In case the target skeleton has fewer bones than the source skeleton, the source bone parent's transform is taken into account. However, bone length between skeletons must match exactly, if not, the bones will be forced to expand or shrink.

This is useful for using dummy bone with length ``0`` to match postures when retargeting between models with different number of bones.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
.. |void| replace:: :abbr:`void (No return value.)`
