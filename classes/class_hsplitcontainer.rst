:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/doc/classes/HSplitContainer.xml.

.. _class_HSplitContainer:

HSplitContainer
===============

**Inherits:** :ref:`SplitContainer<class_SplitContainer>` **<** :ref:`Container<class_Container>` **<** :ref:`Control<class_Control>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

A container that splits two child controls horizontally and provides a grabber for adjusting the split ratio.

.. rst-class:: classref-introduction-group

Description
-----------

A container that accepts only two child controls, then arranges them horizontally and creates a divisor between them. The divisor can be dragged around to change the size relation between the child controls.

.. rst-class:: classref-introduction-group

Tutorials
---------

- :doc:`Using Containers <../tutorials/ui/gui_containers>`

.. rst-class:: classref-reftable-group

Theme Properties
----------------

.. table::
   :widths: auto

   +-----------------------------------+--------------------------------------------------------------------------------------------+--------+
   | :ref:`int<class_int>`             | :ref:`autohide<class_HSplitContainer_theme_constant_autohide>`                             | ``1``  |
   +-----------------------------------+--------------------------------------------------------------------------------------------+--------+
   | :ref:`int<class_int>`             | :ref:`minimum_grab_thickness<class_HSplitContainer_theme_constant_minimum_grab_thickness>` | ``6``  |
   +-----------------------------------+--------------------------------------------------------------------------------------------+--------+
   | :ref:`int<class_int>`             | :ref:`separation<class_HSplitContainer_theme_constant_separation>`                         | ``12`` |
   +-----------------------------------+--------------------------------------------------------------------------------------------+--------+
   | :ref:`Texture2D<class_Texture2D>` | :ref:`grabber<class_HSplitContainer_theme_icon_grabber>`                                   |        |
   +-----------------------------------+--------------------------------------------------------------------------------------------+--------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Theme Property Descriptions
---------------------------

.. _class_HSplitContainer_theme_constant_autohide:

.. rst-class:: classref-themeproperty

:ref:`int<class_int>` **autohide** = ``1``

Boolean value. If 1 (``true``), the grabber will hide automatically when it isn't under the cursor. If 0 (``false``), it's always visible.

.. rst-class:: classref-item-separator

----

.. _class_HSplitContainer_theme_constant_minimum_grab_thickness:

.. rst-class:: classref-themeproperty

:ref:`int<class_int>` **minimum_grab_thickness** = ``6``

The minimum thickness of the area users can click on to grab the splitting line. If :ref:`separation<class_HSplitContainer_theme_constant_separation>` or :ref:`grabber<class_HSplitContainer_theme_icon_grabber>`'s thickness are too small, this ensure that the splitting line can still be dragged.

.. rst-class:: classref-item-separator

----

.. _class_HSplitContainer_theme_constant_separation:

.. rst-class:: classref-themeproperty

:ref:`int<class_int>` **separation** = ``12``

The space between sides of the container.

.. rst-class:: classref-item-separator

----

.. _class_HSplitContainer_theme_icon_grabber:

.. rst-class:: classref-themeproperty

:ref:`Texture2D<class_Texture2D>` **grabber**

The icon used for the grabber drawn in the middle area.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
